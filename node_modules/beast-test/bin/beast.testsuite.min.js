var TestCase,TestResult;TestResult=function(){function TestResult(testClass,name,message,result,position){this.testClass=testClass;this.name=name;this.message=message;this.result=result;this.position=position;this["class"]=this.testClass}TestResult.prototype.testClass=null;TestResult.prototype.name=null;TestResult.prototype.message=null;TestResult.prototype.result=null;TestResult.prototype.position=null;return TestResult}();if(typeof module.exports!=="undefined"){module.exports.TestResult=TestResult}TestCase=function(){var ready;ready=false;function TestCase(auto){this.auto=auto!=null?auto:true;TestCase.count++;if(this.auto){this.run()}}TestCase.count=0;TestCase.result=[];TestCase.prototype.prepare=function(){var property,_results;for(property in this){if(property==="base"){ready=true}}_results=[];for(property in this){if(property==="reset"&&typeof this[reset]==="function"){_results.push(ready=ready&&true)}else{_results.push(void 0)}}return _results};TestCase.prototype.run=function(){var e,property;if(typeof TestCase.start_t==="undefined"){TestCase.start_t=Date.now()}else{TestCase.start_t=Math.min(Date.now(),TestCase.start_t)}this.prepare();if(!ready){return}for(property in this){if(property.slice(0,5).toLowerCase()==="_test"||property.slice(0,4).toLowerCase()==="test"){TestCase.testAssert=1;TestCase.currentClassName=this.constructor.name;TestCase.currentName=property;try{this.base()}catch(_error){e=_error;TestCase.result.push(new TestResult(TestCase.currentClassName,"base","Exception "+e.constructor.name+": "+e.message,TestCase.failed,TestCase.testAssert++));break}try{if(this.base()instanceof Array){this[property].apply(this,this.base())}else{this[property].call(this,this.base())}}catch(_error){e=_error;TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"Exception "+e.constructor.name+": "+e.message,TestCase.failed,TestCase.testAssert++));continue}}}return TestCase.end_t=Date.now()};TestCase.prototype.assertTrue=function(value){if(value===true){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert false is true",TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertEquals=function(test,value){if(test instanceof Array&&value instanceof Array){return this.assertObjectEquals(test,value)}if(test instanceof Object&&value instanceof Object){return this.assertObjectEquals(test,value)}if(test===value){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,'failed to assert "'+test+'" equal to "'+value+'"',TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertNotNull=function(value){if(value!==null){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert "+value+" as not null",TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertNull=function(value){if(value===null){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert "+value+" as null",TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertArrayEquals=function(array1,array2){var i,len,_i;if(array1.length===array2.length){len=array1.length;for(i=_i=0;0<=len?_i<len:_i>len;i=0<=len?++_i:--_i){if(array1[i]!==array2[i]){TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert index "+i+' is equal, "'+array1[i]+'" not "'+array2[i]+'"',TestCase.failed,TestCase.testAssert++))}}return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"arrays are not the same value",TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertObjectEquals=function(obj1,obj2){var e,result;try{result=this.deepObjectCompare(obj1,obj2)}catch(_error){e=_error;if(e instanceof RangeError){TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"Warning - Object may have circular reference, may or may not be equal",TestCase.warning,TestCase.testAssert++));return}else{TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,e.message,TestCase.failed,TestCase.testAssert++));return}}if(!result.passed){TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert property["+result.key+'] is equal, "'+result.value.test+'" not "'+result.value.value+'"',TestCase.failed,TestCase.testAssert++))}else{TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}};TestCase.prototype.deepObjectCompare=function(test,value){var key,result;result={};for(key in test){result.key=key;result.value={test:test[key],value:value[key]};if(typeof test[key]==="object"&&typeof value[key]==="object"){if(!this.deepObjectCompare(test[key],value[key])){result.passed=false;return result}}else if(typeof test[key]==="object"&&typeof value[key]==="object"){if(!this.deepObjectCompare(test[key],value[key])){result.passed=false;return result}}else if(test[key]!==value[key]){result.passed=false;return result}}result.passed=true;return result};TestCase.prototype.assertSame=function(test,value){if(test===value){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,'failed to assert "'+test+'" is the exact same "'+value+'"',TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertSimilar=function(test,value){if(typeof test==="string"&&typeof value==="string"){if(test.toLowerCase()===value.toLowerCase()){TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,'failed to assert "'+test+'" of type ['+typeof test+'] is similar to "'+value+'" of type ['+typeof value+"]",TestCase.failed,TestCase.testAssert++))}return}if(test==value){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,'failed to assert "'+test+'" of type ['+typeof test+'] is similar to "'+value+'" of type ['+typeof value+"]",TestCase.failed,TestCase.testAssert++))}};TestCase.prototype.assertFunction=function(func){if(typeof func==="function"){return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"passed",TestCase.passed,TestCase.testAssert++))}else{return TestCase.result.push(new TestResult(TestCase.currentClassName,TestCase.currentName,"failed to assert value is function, "+func.constructor.name+" was passed",TestCase.failed,TestCase.testAssert++))}};TestCase.passed=1;TestCase.warning=0;TestCase.failed=-1;TestCase.getHTMLResult=function(){TestCase.nl="<br/>";TestCase.tab="&nbsp;&nbsp;&nbsp;";return TestCase.print()};TestCase.getResult=function(){TestCase.nl="\n";TestCase.tab="	";return TestCase.print()};TestCase.nl="\n";TestCase.tab="	";TestCase.result=[];TestCase.print=function(){var failCount,passedCount,result,string,warningCount,_i,_len,_ref;failCount=0;warningCount=0;passedCount=0;string="";_ref=TestCase.result;for(_i=0,_len=_ref.length;_i<_len;_i++){result=_ref[_i];if(result.result===TestCase.passed){passedCount++}else if(result.result===TestCase.warning){warningCount++;string+=TestCase.format(result)}else if(result.result===TestCase.failed){failCount++;string+=TestCase.format(result)}}TestCase.total_t=TestCase.end_t-TestCase.start_t;TestCase.seconds=parseInt(TestCase.total_t/1e3);TestCase.ms=TestCase.total_t%1e3;return string+="Test Complete "+passedCount+"/"+TestCase.result.length+" passed, "+warningCount+"/"+TestCase.result.length+" warnings, "+failCount+"/"+TestCase.result.length+" failed"+TestCase.nl+"Total time "+TestCase.seconds+"s "+TestCase.ms+"ms"};TestCase.format=function(result){var nl,tab;nl=TestCase.nl;tab=TestCase.tab;if(result.result===TestCase.passed){return""}else if(result.result===TestCase.warning){return""+result["class"]+"@"+result.name+nl+tab+result.message+", on assert # "+result.position+nl+nl}else if(result.result===TestCase.failed){return""+result["class"]+"@"+result.name+nl+tab+result.message+", on assert # "+result.position+nl+nl}};return TestCase}();if(typeof module.exports!=="undefined"){module.exports.TestCase=TestCase}
//# sourceMappingURL=beast.testsuite.min.map